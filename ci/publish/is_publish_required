#!/bin/bash -e

#PYPI_URL="${1-https://pypi.org}"
PYPI_URL="https://pypi.org"
echo "Using ${PYPI_URL} as the publish endpoint"

PACKAGE_NAME=conjur-api
PKG_INFO_URL=${PYPI_URL}/pypi/$PACKAGE_NAME/json

echo "Determining if publishing is needed for package '$PACKAGE_NAME'..."

LOCAL_VERSION=$(python3 -c 'import conjur_api; print(conjur_api.__version__);')
echo "Local version: ${LOCAL_VERSIO}N"

echo "Get published package version info from: ${PKG_INFO_URL}"

PUBLISHED_VERSION=$(curl -Ls ${PKG_INFO_URL} | jq -r '.info.version' || echo "<not published>")
echo "Extracted published version from ${PKG_INFO_URL}: ${PUBLISHED_VERSION}"

if [[ "${LOCAL_VERSION}" == "${PUBLISHED_VERSION}" ]]; then
  echo "WARN: Local version of $PACKAGE_NAME ($LOCAL_VERSION) is the same as published version (${PUBLISHED_VERSION})!"
  echo "WARN: Skipping publishing!"
  exit 1
fi

echo "Published version (${PUBLISHED_VERSION}) does not match local version (${LOCAL_VERSION})!"
echo "Checking current git tag to see if it matches this commit..."

# Git fetch will fail if we don't have the host added in our known_hosts
# which will happen in a clean container
# TODO uncomment once repo is public
#echo "Adding ssh key of GitHub to known_hosts..."
#mkdir -p ~/.ssh
#ssh-keyscan github.com >> ~/.ssh/known_hosts
#
## Jenkins git plugin is broken and always fetches with `--no-tags`
## (or `--tags`, neither of which is what you want), so tags end up
## not being fetched. Try to fix that.
## (Unfortunately this fetches all remote heads, so we may have to find
## another solution for bigger repos.)

#echo "Fetching known tags..."
#git fetch -q

#TAG_COMMIT=$(git rev-list -n 1 "v${LOCAL_VERSION}" 2>/dev/null || true)
#echo "Tag v${LOCAL_VERSION} commit: '${TAG_COMMIT}'"

#HEAD_COMMIT=$(git rev-parse HEAD)
#echo "Head commit: '${HEAD_COMMIT}'"

#if [[ "${HEAD_COMMIT}" != "${TAG_COMMIT}" ]]; then
#  echo "WARN: HEAD commit '${HEAD_COMMIT}' does not match version commit '${TAG_COMMIT}'!"
#  echo "WARN: Skipping publish!"
#  exit 1
#fi
#
echo "We are on a tagged commit that matches our declared version!"
echo "*** Publishing is needed! ***"

exit 0
